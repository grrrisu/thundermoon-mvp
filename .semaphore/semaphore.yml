version: v1.0

name: Thundermoon Umbrella

agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804

blocks:
  - name: "Prepare Containers"
    task:
      secrets:
        - name: dockerhub-secrets
      env_vars:
        - name: DOCKER_REPOSITORY
          value: grrrocker/thundermoon-umbrella
      prologue:
        commands:
          # Authenticate to the registry for all jobs in the block
          - echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin
          - checkout
      jobs:
        - name: build container
          commands:
            # build
            - docker build -t thundermoon:build --target=build .
            - docker tag thundermoon:build "$DOCKER_REPOSITORY:build_$SEMAPHORE_GIT_SHA"
            - docker push "$DOCKER_REPOSITORY:build_$SEMAPHORE_GIT_SHA"
            # test
            - docker build -t thundermoon:test --target=test --build-arg BUILD_IMAGE=thundermoon:build .
            - docker tag thundermoon:test "$DOCKER_REPOSITORY:test_$SEMAPHORE_GIT_SHA"
            - docker push "$DOCKER_REPOSITORY:test_$SEMAPHORE_GIT_SHA"
            # integration
            - mv config/dev.secret.example.exs config/dev.secret.exs
            - docker build -t thundermoon:integration --target=integration --build-arg BUILD_IMAGE=thundermoon:build .
            - docker tag thundermoon:integration "$DOCKER_REPOSITORY:integration_$SEMAPHORE_GIT_SHA"
            - docker push "$DOCKER_REPOSITORY:integration_$SEMAPHORE_GIT_SHA"
      # epilogue:
      #   commands:
      #     - mkdir -p deps
  - name: "Test"
    task:
      secrets:
        - name: dockerhub-secrets
      env_vars:
        - name: DOCKER_REPOSITORY
          value: grrrocker/thundermoon-umbrella
      prologue:
        commands:
          # Authenticate to the registry for all jobs in the block
          - echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin
          - checkout
      jobs:
        - name: check credo
          commands:
            - docker pull "$DOCKER_REPOSITORY:test_$SEMAPHORE_GIT_SHA"
            - docker tag "$DOCKER_REPOSITORY:test_$SEMAPHORE_GIT_SHA" thundermoon:test
            - docker run "thundermoon:test" mix credo suggest --min-priority high
        - name: check formatted
          commands:
            - docker pull "$DOCKER_REPOSITORY:test_$SEMAPHORE_GIT_SHA"
            - docker tag "$DOCKER_REPOSITORY:test_$SEMAPHORE_GIT_SHA" thundermoon:test
            - docker run "thundermoon:test" mix format --check-formatted
        - name: mix test
          commands:
            - docker pull "$DOCKER_REPOSITORY:test_$SEMAPHORE_GIT_SHA"
            - docker tag "$DOCKER_REPOSITORY:test_$SEMAPHORE_GIT_SHA" thundermoon:test
            - IMAGE="thundermoon:test" docker-compose -f .semaphore/docker-compose.yml up --abort-on-container-exit --exit-code-from app
        - name: cypress
          commands:
            - docker pull "$DOCKER_REPOSITORY:integration_$SEMAPHORE_GIT_SHA"
            - IMAGE="$DOCKER_REPOSITORY:integration_$SEMAPHORE_GIT_SHA" docker-compose -f .semaphore/docker-compose.integration.yml up --abort-on-container-exit --exit-code-from browser
      # epilogue:
      #   commands:
      #     - remove old images build and test
promotions:
  - name: Deploy
    pipeline_file: deploy.yml
    auto_promote_on:
      - result: passed
        branch:
          - main
