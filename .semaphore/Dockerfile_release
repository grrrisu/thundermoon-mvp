########################################################
# docker build -t thundermoon:releaser --target=releaser .
FROM thundermoon:build as releaser

WORKDIR /app
ENV MIX_ENV=prod

# compile and build the release
RUN mix compile
# changes to config/runtime.exs don't require recompiling the code
COPY config/runtime.exs config/
# uncomment COPY if rel/ exists
# COPY rel rel
RUN mix phx.digest
RUN mix release

########################################################
# docker build -t thundermoon:app --target=app .
FROM alpine:3.18.2 AS app
RUN apk add --no-cache libstdc++ openssl ncurses-libs

ENV MIX_ENV=prod
ENV USER="elixir"

WORKDIR "/home/${USER}/app"
# Creates an unprivileged user to be used exclusively to run the Phoenix app
RUN \
  addgroup \
  -g 1000 \
  -S "${USER}" \
  && adduser \
  -s /bin/sh \
  -u 1000 \
  -G "${USER}" \
  -h "/home/${USER}" \
  -D "${USER}" \
  && su "${USER}"

# Everything from this line onwards will run in the context of the unprivileged user.
USER "${USER}"

COPY --from=releaser --chown="${USER}":"${USER}" /app/_build/"${MIX_ENV}"/rel/thundermoon_umbrella ./
COPY --chown="${USER}":"${USER}" *.sh ./

CMD ["/app/run.sh"]